<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
	default-autowire="byName">
	<!-- JMS begin -->
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://101.227.251.228:61616" />
	</bean>
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="10" />
	</bean>
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="pooledConnectionFactory" />
	</bean>

	<!-- 类型转换器 -->
	<bean id="emailMessageConverter" class="com.nanoutech.test.jms.converter.EmailMessageConverter" />

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="messageConverter" ref="emailMessageConverter" />
	</bean>
	<!-- 队列,点对点 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>queue</value>
		</constructor-arg>
	</bean>
	<bean id="sessionAwareQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>sessionAwareQueue</value>
		</constructor-arg>
	</bean>
	<bean id="adapterQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>adapterQueue</value>
		</constructor-arg>
	</bean>
	<!-- 用于测试消息回复的 -->
	<bean id="responseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>responseQueue</value>
		</constructor-arg>
	</bean>
	<!-- 默认的消息回复队列 -->
	<bean id="defaultResponseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>defaultResponseQueue</value>
		</constructor-arg>
	</bean>

	<!-- 主题,一对多 -->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="topic" />
	</bean>

	<bean id="consumerMessageListener" class="com.nanoutech.test.jms.listener.ConsumerMessageListener" />
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestination" />
		<property name="messageListener" ref="consumerMessageListener" />
	</bean>

	<!-- 带Session的Listener -->
	<bean id="consumerSessionAwareMessageListener" class="com.nanoutech.test.jms.listener.ConsumerSessionAwareMessageListener" />
	<bean id="sessionAwareListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="sessionAwareQueue" />
		<property name="messageListener" ref="consumerSessionAwareMessageListener" />
	</bean>

	<!-- 消息监听适配器 -->
	<bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate">
			<bean class="com.nanoutech.test.jms.listener.ConsumerListener" />
		</property>
		<!-- 不带回复的监听方法 -->
		<property name="defaultListenerMethod" value="receiveMessage" />
		<!-- 带回复的监听方法 -->
		<!-- <property name="defaultListenerMethod" value="receiveMessageWithReturn" /> -->
		<!-- 默认的回复目的地,不通过Message的setJMSReplyTo方法指定消息的回复目的地 -->
		<!-- <property name="defaultResponseDestination" ref="defaultResponseQueue"/> -->
	</bean>

	<!-- 消息监听适配器对应的监听容器 -->
	<bean id="messageListenerAdapterContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="adapterQueue" />
		<property name="messageListener" ref="messageListenerAdapter" />
	</bean>

	<!-- responseQueue对应的监听器 -->
	<bean id="responseQueueListener" class="com.nanoutech.test.jms.listener.ResponseQueueListener" />
	<!-- responseQueue对应的监听容器 -->
	<bean id="responseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="responseQueue" />
		<property name="messageListener" ref="responseQueueListener" />
	</bean>

	<!-- defaultResponseQueue对应的监听器 -->
	<bean id="defaultResponseQueueListener" class="com.nanoutech.test.jms.listener.DefaultResponseQueueListener" />
	<!-- defaultResponseQueue对应的监听容器 -->
	<bean id="defaultResponseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="defaultResponseQueue" />
		<property name="messageListener" ref="defaultResponseQueueListener" />
	</bean>
	<!-- JMS end -->

	<bean id="messageService" class="com.nanoutech.test.jms.service.MessageService" />

</beans>
